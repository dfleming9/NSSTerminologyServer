package main

import (
  "fmt"
  "strings"
  "net/http"
  "io/ioutil"
)

func main() {

  url := "https://ontology.scot.nhs.uk/production1/fhir/ValueSet/$expand"
  method := "POST"

  payload := strings.NewReader(`{`+"
"+`
    "resourceType": "Parameters",`+"
"+`
    "parameter": [`+"
"+`
        {`+"
"+`
            "name": "valueSet",`+"
"+`
            "resource": {`+"
"+`
                "resourceType": "ValueSet",`+"
"+`
                "compose": {`+"
"+`
                    "include": [`+"
"+`
                        {`+"
"+`
                            "system": "http://snomed.info/sct",`+"
"+`
                            "filter": [`+"
"+`
                                {`+"
"+`
                                    "property": "constraint",`+"
"+`
                                    "op": "=",`+"
"+`
                                    "value": "<< 50043002 : << 263502005 = << 19939008"`+"
"+`
                                }`+"
"+`
                            ]`+"
"+`
                        }`+"
"+`
                    ]`+"
"+`
                }`+"
"+`
            }`+"
"+`
        }`+"
"+`
    ]`+"
"+`
}`)

  client := &http.Client {
  }
  req, err := http.NewRequest(method, url, payload)

  if err != nil {
    fmt.Println(err)
    return
  }
  req.Header.Add("Content-Type", "application/fhir+json")
  req.Header.Add("Authorization", "Bearer <token>")

  res, err := client.Do(req)
  if err != nil {
    fmt.Println(err)
    return
  }
  defer res.Body.Close()

  body, err := ioutil.ReadAll(res.Body)
  if err != nil {
    fmt.Println(err)
    return
  }
  fmt.Println(string(body))
}